openapi: 3.0.0
info:
  title: Indicator Backend API
  version: 1.0.0
  description: |
    API documentation for the Indicator application backend.

    This API provides endpoints for managing educational institutions' data including:
    - User authentication and management
    - School basic information (alapadatok)
    - Student enrollment data (tanulo_letszam)
    - Educational data (tanugyi_adatok)
    - Competency measurements (kompetencia)
    - Admission statistics (felvettek_szama)
    - Table and data access management

    ## Authentication

    Most endpoints require JWT Bearer token authentication. To authenticate:
    1. Use the `/auth/login` endpoint to obtain a token
    2. Include the token in the Authorization header: `Bearer <token>`

    ## Base URL

    All API endpoints are prefixed with `/api/v1`

  contact:
    name: API Support
    url: https://indicator.pollak.info
    email: support@pollak.info
  license:
    name: Private
    url: https://indicator.pollak.info/license

servers:
  - url: /api/v1
    description: API v1

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT Bearer token for authentication

  schemas:
    # Common schemas
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
        message:
          type: string
          description: Detailed error message
      example:
        error: "Invalid input data"
        message: "The provided data does not meet the required format"

    SuccessResponse:
      type: object
      properties:
        status:
          type: string
          example: "success"
        message:
          type: string
          example: "Operation completed successfully"

    # TableList schemas
    TableList:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the table
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          maxLength: 100
          description: Name of the table
          example: "tanugyi_adatok"
        isAvailable:
          type: boolean
          description: Whether the table is available for access
          example: true
        createdAt:
          type: string
          format: date-time
          description: When the table entry was created
          example: "2024-01-01T00:00:00.000Z"
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: When the table entry was last updated
          example: "2024-01-02T12:30:00.000Z"

    TableListInput:
      type: object
      required:
        - name
        - isAvailable
      properties:
        name:
          type: string
          maxLength: 100
          description: Name of the table
          example: "tanugyi_adatok"
        isAvailable:
          type: boolean
          description: Whether the table should be available for access
          example: true

    # User schemas
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: User ID
          example: "123e4567-e89b-12d3-a456-426614174000"
        email:
          type: string
          format: email
          description: User email
          example: user@example.com
        name:
          type: string
          description: User full name
          example: John Doe
        permissions:
          type: integer
          description: User permission bitfield
          example: 1
        createdAt:
          type: string
          format: date-time
          description: Account creation timestamp
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: Last update timestamp

    # Authentication schemas
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          example: "12345678"

    LoginResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        email:
          type: string
          example: user@example.com
        name:
          type: string
          example: John Doe
        permissions:
          type: integer
          example: 1
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        refreshToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

    # Alapadatok schemas
    Alapadatok:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier
          example: "123e4567-e89b-12d3-a456-426614174000"
        iskola_neve:
          type: string
          maxLength: 150
          description: School name
          example: "Pollák Antal Technikum"
        intezmeny_tipus:
          type: string
          maxLength: 50
          description: Institution type
          example: "Technikum"
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: Last update timestamp

    # Dobbanto schemas
    Dobbanto:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 1
        alapadatok_id:
          type: integer
          description: School identifier reference
          example: 1
        tanev_kezdete:
          type: integer
          description: School year start year
          example: 2023
        dobbanto_szama:
          type: integer
          description: Number of repeating students
          example: 15
        tanulok_osszesen:
          type: integer
          description: Total number of students
          example: 500
        datum:
          type: string
          format: date-time
          description: Date of record
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: Last update timestamp
        alapadatok:
          type: object
          properties:
            nev:
              type: string
              description: School name
              example: "Pollák Antal Technikum"

    DobbantoInput:
      type: object
      required:
        - alapadatok_id
        - tanev_kezdete
        - dobbanto_szama
        - tanulok_osszesen
      properties:
        alapadatok_id:
          type: integer
          description: School identifier reference
          example: 1
        tanev_kezdete:
          type: integer
          description: School year start year
          example: 2023
        dobbanto_szama:
          type: integer
          description: Number of repeating students
          example: 15
        tanulok_osszesen:
          type: integer
          description: Total number of students
          example: 500

    # Elegedettseg schemas
    Elegedettseg:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 1
        szakirany_id:
          type: integer
          nullable: true
          description: Field of study identifier
          example: 1
        szakma_id:
          type: integer
          nullable: true
          description: Profession identifier
          example: 1
        alapadatok_id:
          type: integer
          description: School identifier reference
          example: 1
        tanev_kezdete:
          type: integer
          description: School year start year
          example: 2023
        munkaadok_elegedettsege:
          type: number
          format: float
          description: Employer satisfaction rating
          example: 4.2
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: Last update timestamp

    ElegedettsegInput:
      type: object
      required:
        - alapadatok_id
        - tanev_kezdete
        - munkaadok_elegedettsege
      properties:
        szakirany_id:
          type: integer
          nullable: true
          description: Field of study identifier
          example: 1
        szakma_id:
          type: integer
          nullable: true
          description: Profession identifier
          example: 1
        alapadatok_id:
          type: integer
          description: School identifier reference
          example: 1
        tanev_kezdete:
          type: integer
          description: School year start year
          example: 2023
        munkaadok_elegedettsege:
          type: number
          format: float
          description: Employer satisfaction rating
          example: 4.2

    # Versenyek schemas
    Versenyek:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 1
        versenyKategoria:
          type: string
          description: Competition category
          example: "Programozás"
        versenyNev:
          type: string
          description: Competition name
          example: "OKTV Informatika"
        alapadatokId:
          type: integer
          description: School identifier reference
          example: 1
        helyezett1:
          type: integer
          description: Number of 1st place finishes
          example: 2
        helyezett1_3:
          type: integer
          description: Number of 1st-3rd place finishes
          example: 5
        dontobeJutott:
          type: integer
          description: Number of finalists
          example: 8
        nevezettekSzama:
          type: integer
          description: Number of participants
          example: 25
        tanevKezdete:
          type: integer
          description: School year start year
          example: 2023
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: Last update timestamp

    VersenyekInput:
      type: object
      required:
        - versenyKategoria
        - versenyNev
        - alapadatokId
        - helyezett1
        - helyezett1_3
        - dontobeJutott
        - nevezettekSzama
        - tanevKezdete
      properties:
        versenyKategoria:
          type: string
          description: Competition category
          example: "Programozás"
        versenyNev:
          type: string
          description: Competition name
          example: "OKTV Informatika"
        alapadatokId:
          type: integer
          description: School identifier reference
          example: 1
        helyezett1:
          type: integer
          description: Number of 1st place finishes
          example: 2
        helyezett1_3:
          type: integer
          description: Number of 1st-3rd place finishes
          example: 5
        dontobeJutott:
          type: integer
          description: Number of finalists
          example: 8
        nevezettekSzama:
          type: integer
          description: Number of participants
          example: 25
        tanevKezdete:
          type: integer
          description: School year start year
          example: 2023

    # ElegedettsegMeres schemas
    ElegedettsegMeres:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 1
        alapadatok_id:
          type: integer
          description: School identifier reference
          example: 1
        tanev_kezdete:
          type: integer
          description: School year start year
          example: 2023
        szulok_elegedettsege:
          type: number
          format: float
          nullable: true
          description: Parent satisfaction rating
          example: 4.3
        oktatok_elegedettsege:
          type: number
          format: float
          nullable: true
          description: Teacher satisfaction rating
          example: 4.1
        tanulok_elegedettsege:
          type: number
          format: float
          nullable: true
          description: Student satisfaction rating
          example: 3.9
        dualis_kepzohely_elegedettsege:
          type: number
          format: float
          nullable: true
          description: Dual training workplace satisfaction rating
          example: 4.0
        munkaero_piac_elegedettsege:
          type: number
          format: float
          nullable: true
          description: Labor market satisfaction rating
          example: 4.2
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: Last update timestamp

    ElegedettsegMeresInput:
      type: object
      required:
        - alapadatok_id
        - tanev_kezdete
      properties:
        alapadatok_id:
          type: integer
          description: School identifier reference
          example: 1
        tanev_kezdete:
          type: integer
          description: School year start year
          example: 2023
        szulok_elegedettsege:
          type: number
          format: float
          nullable: true
          description: Parent satisfaction rating
          example: 4.3
        oktatok_elegedettsege:
          type: number
          format: float
          nullable: true
          description: Teacher satisfaction rating
          example: 4.1
        tanulok_elegedettsege:
          type: number
          format: float
          nullable: true
          description: Student satisfaction rating
          example: 3.9
        dualis_kepzohely_elegedettsege:
          type: number
          format: float
          nullable: true
          description: Dual training workplace satisfaction rating
          example: 4.0
        munkaero_piac_elegedettsege:
          type: number
          format: float
          nullable: true
          description: Labor market satisfaction rating
          example: 4.2

    # Lemorzsolodas schemas
    Lemorzsolodas:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 1
        szakirany_id:
          type: integer
          nullable: true
          description: Field of study identifier
          example: 1
        szakma_id:
          type: integer
          nullable: true
          description: Profession identifier
          example: 1
        alapadatok_id:
          type: integer
          description: School identifier reference
          example: 1
        tanev_kezdete:
          type: integer
          description: School year start year
          example: 2023
        lemorzsolodo_tanulok_szama:
          type: integer
          description: Number of dropout students
          example: 12
        oktober_es_belepett_tanulok_szama:
          type: integer
          description: Number of students enrolled in October
          example: 450
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: Last update timestamp

    LemorzsolodasInput:
      type: object
      required:
        - alapadatok_id
        - tanev_kezdete
        - lemorzsolodo_tanulok_szama
        - oktober_es_belepett_tanulok_szama
      properties:
        szakirany_id:
          type: integer
          nullable: true
          description: Field of study identifier
          example: 1
        szakma_id:
          type: integer
          nullable: true
          description: Profession identifier
          example: 1
        alapadatok_id:
          type: integer
          description: School identifier reference
          example: 1
        tanev_kezdete:
          type: integer
          description: School year start year
          example: 2023
        lemorzsolodo_tanulok_szama:
          type: integer
          description: Number of dropout students
          example: 12
        oktober_es_belepett_tanulok_szama:
          type: integer
          description: Number of students enrolled in October
          example: 450

    # Elhelyezkedes schemas
    Elhelyezkedes:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 1
        szakirany_id:
          type: integer
          nullable: true
          description: Field of study identifier
          example: 1
        szakma_id:
          type: integer
          nullable: true
          description: Profession identifier
          example: 1
        alapadatok_id:
          type: integer
          description: School identifier reference
          example: 1
        tanev_kezdete:
          type: integer
          description: School year start year
          example: 2023
        vegzettek_szama:
          type: integer
          description: Number of graduates
          example: 85
        elhelyezkedett_hallgatok_szama:
          type: integer
          description: Number of placed graduates
          example: 72
        elhelyezkedesek_aranya:
          type: number
          format: float
          description: Placement rate percentage
          example: 84.7
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: Last update timestamp

    ElhelyezkedesInput:
      type: object
      required:
        - alapadatok_id
        - tanev_kezdete
        - vegzettek_szama
        - elhelyezkedett_hallgatok_szama
      properties:
        szakirany_id:
          type: integer
          nullable: true
          description: Field of study identifier
          example: 1
        szakma_id:
          type: integer
          nullable: true
          description: Profession identifier
          example: 1
        alapadatok_id:
          type: integer
          description: School identifier reference
          example: 1
        tanev_kezdete:
          type: integer
          description: School year start year
          example: 2023
        vegzettek_szama:
          type: integer
          description: Number of graduates
          example: 85
        elhelyezkedett_hallgatok_szama:
          type: integer
          description: Number of placed graduates
          example: 72

    # HHesHHHNeveluTanulok schemas
    HHesHHHNeveluTanulok:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 1
        alapadatok_id:
          type: integer
          description: School identifier reference
          example: 1
        tanev_kezdete:
          type: integer
          description: School year start year
          example: 2023
        hh_tanulok_szama:
          type: integer
          description: Number of disadvantaged students (HH)
          example: 25
        hhh_tanulok_szama:
          type: integer
          description: Number of multiply disadvantaged students (HHH)
          example: 8
        osszes_tanulo_szama:
          type: integer
          description: Total number of students
          example: 450
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: Last update timestamp

    HHesHHHNeveluTanulokInput:
      type: object
      required:
        - alapadatok_id
        - tanev_kezdete
        - hh_tanulok_szama
        - hhh_tanulok_szama
        - osszes_tanulo_szama
      properties:
        alapadatok_id:
          type: integer
          description: School identifier reference
          example: 1
        tanev_kezdete:
          type: integer
          description: School year start year
          example: 2023
        hh_tanulok_szama:
          type: integer
          description: Number of disadvantaged students (HH)
          example: 25
        hhh_tanulok_szama:
          type: integer
          description: Number of multiply disadvantaged students (HHH)
          example: 8
        osszes_tanulo_szama:
          type: integer
          description: Total number of students
          example: 450

    # Intezmenyi_neveltseg schemas
    IntezmeniyNeveltseg:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 1
        alapadatok_id:
          type: integer
          description: School identifier reference
          example: 1
        tanev_kezdete:
          type: integer
          description: School year start year
          example: 2023
        alacsony_neveltsegu_oktatok_szama:
          type: integer
          description: Number of low-education teachers
          example: 2
        kozepes_neveltsegu_oktatok_szama:
          type: integer
          description: Number of medium-education teachers
          example: 15
        magas_neveltsegu_oktatok_szama:
          type: integer
          description: Number of high-education teachers
          example: 35
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: Last update timestamp

    # Muhelyiskola schemas
    Muhelyiskola:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 1
        alapadatok_id:
          type: integer
          description: School identifier reference
          example: 1
        tanev_kezdete:
          type: integer
          description: School year start year
          example: 2023
        muhelyiskola_nev:
          type: string
          description: Workshop school name
          example: "Műhelyiskola Program"
        resztvevo_tanulok_szama:
          type: integer
          description: Number of participating students
          example: 45
        sikeres_befejezok_szama:
          type: integer
          description: Number of successful completers
          example: 38
        reszszakmat_szerezok_szama:
          type: integer
          description: Number of students acquiring partial qualifications
          example: 32
        muhelyiskola_tanuloi_osszletszam:
          type: integer
          description: Total number of workshop school students
          example: 45
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: Last update timestamp

    # NSZFH schemas
    NSZFH:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 1
        alapadatok_id:
          type: integer
          description: School identifier reference
          example: 1
        tanev_kezdete:
          type: integer
          description: School year start year
          example: 2023
        kat_1_mat_bemeneti:
          type: number
          format: float
          description: Category 1 mathematics entry assessment
          example: 3.5
        kat_1_mat_kimeneti:
          type: number
          format: float
          description: Category 1 mathematics exit assessment
          example: 4.0
        kat_1_szoveg_bemeneti:
          type: number
          format: float
          description: Category 1 text comprehension entry assessment
          example: 3.2
        kat_1_szoveg_kimeneti:
          type: number
          format: float
          description: Category 1 text comprehension exit assessment
          example: 3.8
        kat_2_mat_bemeneti:
          type: number
          format: float
          description: Category 2 mathematics entry assessment
          example: 3.5
        kat_2_mat_kimeneti:
          type: number
          format: float
          description: Category 2 mathematics exit assessment
          example: 4.0
        kat_2_szoveg_bemeneti:
          type: number
          format: float
          description: Category 2 text comprehension entry assessment
          example: 3.2
        kat_2_szoveg_kimeneti:
          type: number
          format: float
          description: Category 2 text comprehension exit assessment
          example: 3.8
        kat_3_mat_bemeneti:
          type: number
          format: float
          description: Category 3 mathematics entry assessment
          example: 3.5
        kat_3_mat_kimeneti:
          type: number
          format: float
          description: Category 3 mathematics exit assessment
          example: 4.0
        kat_3_szoveg_bemeneti:
          type: number
          format: float
          description: Category 3 text comprehension entry assessment
          example: 3.2
        kat_3_szoveg_kimeneti:
          type: number
          format: float
          description: Category 3 text comprehension exit assessment
          example: 3.8
        kat_4_mat_bemeneti:
          type: number
          format: float
          description: Category 4 mathematics entry assessment
          example: 3.5
        kat_4_mat_kimeneti:
          type: number
          format: float
          description: Category 4 mathematics exit assessment
          example: 4.0
        kat_4_szoveg_bemeneti:
          type: number
          format: float
          description: Category 4 text comprehension entry assessment
          example: 3.2
        kat_4_szoveg_kimeneti:
          type: number
          format: float
          description: Category 4 text comprehension exit assessment
          example: 3.8
        kat_5_mat_bemeneti:
          type: number
          format: float
          description: Category 5 mathematics entry assessment
          example: 3.5
        kat_5_mat_kimeneti:
          type: number
          format: float
          description: Category 5 mathematics exit assessment
          example: 4.0
        kat_5_szoveg_bemeneti:
          type: number
          format: float
          description: Category 5 text comprehension entry assessment
          example: 3.2
        kat_5_szoveg_kimeneti:
          type: number
          format: float
          description: Category 5 text comprehension exit assessment
          example: 3.8
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: Last update timestamp

    # Sajatos_nevelesu_tanulok schemas
    SajatosNeveluTanulok:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 1
        alapadatok_id:
          type: integer
          description: School identifier reference
          example: 1
        tanev_kezdete:
          type: integer
          description: School year start year
          example: 2023
        sajatos_nevelesu_tanulok_szama:
          type: integer
          description: Number of students with special needs
          example: 18
        integralt_oktatas_tanulok_szama:
          type: integer
          description: Number of students in integrated education
          example: 12
        kulonleges_gondozas_tanulok_szama:
          type: integer
          description: Number of students receiving special care
          example: 6
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: Last update timestamp

    # Szakmai_vizsga_eredmenyek schemas
    SzakmaiVizsgaEredmenyek:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 1
        alapadatok_id:
          type: integer
          description: School identifier reference
          example: 1
        tanev_kezdete:
          type: integer
          description: School year start year
          example: 2023
        szakirany_id:
          type: integer
          description: Field of study identifier
          example: 1
        szakma_id:
          type: integer
          description: Profession identifier
          example: 1
        vizsgara_bocsathatoak_szama:
          type: integer
          description: Number of students eligible for exam
          example: 45
        sikeres_vizsgazok_szama:
          type: integer
          description: Number of successful exam takers
          example: 38
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: Last update timestamp

    # SZMSZ schemas
    SZMSZ:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 1
        alapadatok_id:
          type: integer
          description: School identifier reference
          example: 1
        szakirany_id:
          type: integer
          nullable: true
          description: Field of study identifier
          example: 1
        szakma_id:
          type: integer
          nullable: true
          description: Profession identifier
          example: 1
        tanev_kezdete:
          type: integer
          description: School year start year
          example: 2023
        vegzettek_szama:
          type: integer
          description: Number of graduates
          example: 85
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: Last update timestamp

    # Vizsgaeredmenyek schemas
    Vizsgaeredmenyek:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier
          example: 1
        alapadatok_id:
          type: integer
          description: School identifier reference
          example: 1
        tanev_kezdete:
          type: integer
          description: School year start year
          example: 2023
        vizsga_tipus:
          type: string
          description: Exam type
          example: "Érettségi"
        targy:
          type: string
          description: Subject
          example: "Matematika"
        atlag_eredmeny:
          type: number
          format: float
          description: Average result
          example: 3.8
        resztvevok_szama:
          type: integer
          description: Number of participants
          example: 85
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
        updatedAt:
          type: string
          format: date-time
          nullable: true
          description: Last update timestamp

security:
  - bearerAuth: []

tags:
  - name: Authentication
    description: User authentication and token management
  - name: TableList
    description: Table list management endpoints for managing available data tables
  - name: Users
    description: User management endpoints
  - name: Alapadatok
    description: School basic information management
  - name: EgyOktatoraJutoTanulo
    description: Student-to-teacher ratio data management
  - name: Cache
    description: Cache management endpoints
  - name: Logs
    description: System logging and monitoring
  - name: Kompetencia
    description: Competency measurement data management
  - name: Tanulo_letszam
    description: Student enrollment data management
  - name: Felvettek_szama
    description: Student admission data management
  - name: Tanugyi_adatok
    description: Educational data management
  - name: Dobbanto
    description: Repeating students data management
  - name: Elegedettseg
    description: Employer satisfaction data management
  - name: Versenyek
    description: Competition data management
  - name: Elegedettseg_meres
    description: Satisfaction measurement data management
  - name: Elhelyezkedes
    description: Graduate placement data management
  - name: HH_es_HHH_nevelesu_tanulok
    description: Disadvantaged students data management
  - name: Intezmenyi_neveltseg
    description: Institutional education level data management
  - name: Lemorzsolodas
    description: Student dropout data management
  - name: Muhelyiskola
    description: Workshop school data management
  - name: NSZFH
    description: NSZFH data management
  - name: Sajatos_nevelesu_tanulok
    description: Students with special needs data management
  - name: Szakmai_vizsga_eredmenyek
    description: Professional exam results data management
  - name: SZMSZ
    description: SZMSZ data management
  - name: Vizsgaeredmenyek
    description: Exam results data management

paths:
  # Authentication endpoints
  /auth/login:
    post:
      tags: [Authentication]
      summary: User authentication
      description: Authenticates a user and returns tokens for authorization
      security: [] # No auth required for login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Authentication successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          description: Invalid credentials or missing data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # TableList endpoints
  /tablelist:
    get:
      tags: [TableList]
      summary: Get all tables
      description: Retrieves a list of all available tables in the system
      responses:
        "200":
          description: List of tables retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TableList"
        "401":
          description: Unauthorized - Invalid or missing authentication token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    post:
      tags: [TableList]
      summary: Create a new table
      description: Creates a new table entry in the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TableListInput"
      responses:
        "201":
          description: Table created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TableList"
        "400":
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /tablelist/{id}:
    put:
      tags: [TableList]
      summary: Update an existing table
      description: Updates an existing table entry in the system
      parameters:
        - in: path
          name: id
          required: true
          description: Unique identifier of the table to update
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TableListInput"
      responses:
        "200":
          description: Table updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TableList"
        "400":
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Table not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # Dobbanto endpoints
  /dobbanto/{tanev}:
    get:
      tags: [Dobbanto]
      summary: Get dobbanto data by school year
      description: Retrieve dobbanto (repeating students) data for a specific school year and previous 4 years
      parameters:
        - in: path
          name: tanev
          required: true
          description: The school year end (e.g., 2024 for 2023-2024 school year)
          schema:
            type: integer
            example: 2024
      responses:
        "200":
          description: Dobbanto data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Dobbanto"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /dobbanto/{alapadatokId}/{tanev}:
    get:
      tags: [Dobbanto]
      summary: Get dobbanto data by school and year
      description: Retrieve dobbanto data for a specific school and school year
      parameters:
        - in: path
          name: alapadatokId
          required: true
          description: The school identifier
          schema:
            type: integer
            example: 1
        - in: path
          name: tanev
          required: true
          description: The school year end
          schema:
            type: integer
            example: 2024
      responses:
        "200":
          description: Dobbanto data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Dobbanto"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags: [Dobbanto]
      summary: Delete dobbanto data by school and year
      description: Delete all dobbanto data for a specific school and school year
      parameters:
        - in: path
          name: alapadatokId
          required: true
          description: The school identifier
          schema:
            type: integer
            example: 1
        - in: path
          name: tanev
          required: true
          description: The school year end
          schema:
            type: integer
            example: 2024
      responses:
        "204":
          description: Dobbanto data deleted successfully
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /dobbanto:
    post:
      tags: [Dobbanto]
      summary: Create new dobbanto data
      description: Create new dobbanto (repeating students) data entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DobbantoInput"
      responses:
        "201":
          description: Dobbanto data created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dobbanto"
        "400":
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /dobbanto/{id}:
    put:
      tags: [Dobbanto]
      summary: Update dobbanto data
      description: Update existing dobbanto (repeating students) data entry
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Dobbanto record ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DobbantoInput"
      responses:
        "200":
          description: Dobbanto data updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dobbanto"
        "400":
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Record not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # Elegedettseg endpoints
  /elegedettseg/{tanev}:
    get:
      tags: [Elegedettseg]
      summary: Get satisfaction data by school year
      description: Retrieve employer satisfaction data for a specific school year
      parameters:
        - in: path
          name: tanev
          required: true
          description: The school year end
          schema:
            type: integer
            example: 2024
      responses:
        "200":
          description: Satisfaction data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Elegedettseg"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /elegedettseg/{alapadatokId}/{tanev}:
    get:
      tags: [Elegedettseg]
      summary: Get satisfaction data by school and year
      description: Retrieve employer satisfaction data for a specific school and school year
      parameters:
        - in: path
          name: alapadatokId
          required: true
          description: The school identifier
          schema:
            type: integer
            example: 1
        - in: path
          name: tanev
          required: true
          description: The school year end
          schema:
            type: integer
            example: 2024
      responses:
        "200":
          description: Satisfaction data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Elegedettseg"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags: [Elegedettseg]
      summary: Delete satisfaction data by school and year
      description: Delete all satisfaction data for a specific school and school year
      parameters:
        - in: path
          name: alapadatokId
          required: true
          description: The school identifier
          schema:
            type: integer
            example: 1
        - in: path
          name: tanev
          required: true
          description: The school year end
          schema:
            type: integer
            example: 2024
      responses:
        "204":
          description: Satisfaction data deleted successfully
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /elegedettseg:
    post:
      tags: [Elegedettseg]
      summary: Create new satisfaction data
      description: Create new employer satisfaction data entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ElegedettsegInput"
      responses:
        "201":
          description: Satisfaction data created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Elegedettseg"
        "400":
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /elegedettseg/{id}:
    put:
      tags: [Elegedettseg]
      summary: Update satisfaction data
      description: Update existing employer satisfaction data entry
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Satisfaction record ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ElegedettsegInput"
      responses:
        "200":
          description: Satisfaction data updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Elegedettseg"
        "400":
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Record not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # Versenyek endpoints
  /versenyek/{tanev}:
    get:
      tags: [Versenyek]
      summary: Get competition data by school year
      description: Retrieve competition data for a specific school year
      parameters:
        - in: path
          name: tanev
          required: true
          description: The school year end
          schema:
            type: integer
            example: 2024
      responses:
        "200":
          description: Competition data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Versenyek"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /versenyek/{alapadatokId}/{tanev}:
    get:
      tags: [Versenyek]
      summary: Get competition data by school and year
      description: Retrieve competition data for a specific school and school year
      parameters:
        - in: path
          name: alapadatokId
          required: true
          description: The school identifier
          schema:
            type: integer
            example: 1
        - in: path
          name: tanev
          required: true
          description: The school year end
          schema:
            type: integer
            example: 2024
      responses:
        "200":
          description: Competition data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Versenyek"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /versenyek:
    post:
      tags: [Versenyek]
      summary: Create new competition data
      description: Create new competition data entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VersenyekInput"
      responses:
        "201":
          description: Competition data created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Versenyek"
        "400":
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /versenyek/{id}:
    put:
      tags: [Versenyek]
      summary: Update competition data
      description: Update existing competition data entry
      parameters:
        - in: path
          name: id
          required: true
          description: The competition entry identifier
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VersenyekInput"
      responses:
        "200":
          description: Competition data updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Versenyek"
        "400":
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Competition entry not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # Elegedettseg_meres endpoints
  /elegedettseg_meres/{tanev}:
    get:
      tags: [Elegedettseg_meres]
      summary: Get satisfaction measurement data by school year
      description: Retrieve satisfaction measurement data for a specific school year
      parameters:
        - in: path
          name: tanev
          required: true
          description: The school year end
          schema:
            type: integer
            example: 2024
      responses:
        "200":
          description: Satisfaction measurement data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ElegedettsegMeres"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /elegedettseg_meres/{alapadatokId}/{tanev}:
    get:
      tags: [Elegedettseg_meres]
      summary: Get satisfaction measurement data by school and year
      description: Retrieve satisfaction measurement data for a specific school and school year
      parameters:
        - in: path
          name: alapadatokId
          required: true
          description: The school identifier
          schema:
            type: integer
            example: 1
        - in: path
          name: tanev
          required: true
          description: The school year end
          schema:
            type: integer
            example: 2024
      responses:
        "200":
          description: Satisfaction measurement data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ElegedettsegMeres"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags: [Elegedettseg_meres]
      summary: Delete satisfaction measurement data by school and year
      description: Delete all satisfaction measurement data for a specific school and school year
      parameters:
        - in: path
          name: alapadatokId
          required: true
          description: The school identifier
          schema:
            type: integer
            example: 1
        - in: path
          name: tanev
          required: true
          description: The school year end
          schema:
            type: integer
            example: 2024
      responses:
        "204":
          description: Satisfaction measurement data deleted successfully
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /elegedettseg_meres:
    post:
      tags: [Elegedettseg_meres]
      summary: Create new satisfaction measurement data
      description: Create new satisfaction measurement data entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ElegedettsegMeresInput"
      responses:
        "201":
          description: Satisfaction measurement data created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ElegedettsegMeres"
        "400":
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /elegedettseg_meres/{id}:
    put:
      tags: [Elegedettseg_meres]
      summary: Update satisfaction measurement data
      description: Update existing satisfaction measurement data entry
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Satisfaction measurement record ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ElegedettsegMeresInput"
      responses:
        "200":
          description: Satisfaction measurement data updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ElegedettsegMeres"
        "400":
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Record not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /elegedettseg_meres/{id}:
    put:
      tags: [Elegedettseg_meres]
      summary: Update satisfaction measurement data
      description: Update existing satisfaction measurement data entry
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Satisfaction measurement record ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ElegedettsegMeresInput"
      responses:
        "200":
          description: Satisfaction measurement data updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ElegedettsegMeres"
        "400":
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Record not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # Lemorzsolodas endpoints
  /lemorzsolodas/{tanev}:
    get:
      tags: [Lemorzsolodas]
      summary: Get dropout data by school year
      description: Retrieve student dropout data for a specific school year
      parameters:
        - in: path
          name: tanev
          required: true
          description: The school year end
          schema:
            type: integer
            example: 2024
      responses:
        "200":
          description: Dropout data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Lemorzsolodas"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /lemorzsolodas/{alapadatokId}/{tanev}:
    get:
      tags: [Lemorzsolodas]
      summary: Get dropout data by school and year
      description: Retrieve student dropout data for a specific school and school year
      parameters:
        - in: path
          name: alapadatokId
          required: true
          description: The school identifier
          schema:
            type: integer
            example: 1
        - in: path
          name: tanev
          required: true
          description: The school year end
          schema:
            type: integer
            example: 2024
      responses:
        "200":
          description: Dropout data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Lemorzsolodas"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags: [Lemorzsolodas]
      summary: Delete dropout data by school and year
      description: Delete all dropout data for a specific school and school year
      parameters:
        - in: path
          name: alapadatokId
          required: true
          description: The school identifier
          schema:
            type: integer
            example: 1
        - in: path
          name: tanev
          required: true
          description: The school year end
          schema:
            type: integer
            example: 2024
      responses:
        "204":
          description: Dropout data deleted successfully
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /lemorzsolodas:
    post:
      tags: [Lemorzsolodas]
      summary: Create new dropout data
      description: Create new student dropout data entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LemorzsolodasInput"
      responses:
        "201":
          description: Dropout data created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lemorzsolodas"
        "400":
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /lemorzsolodas/{id}:
    put:
      tags: [Lemorzsolodas]
      summary: Update dropout data
      description: Update existing student dropout data entry
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Dropout record ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LemorzsolodasInput"
      responses:
        "200":
          description: Dropout data updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Lemorzsolodas"
        "400":
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Record not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # Elhelyezkedes endpoints
  /elhelyezkedes/{tanev}:
    get:
      tags: [Elhelyezkedes]
      summary: Get graduate placement data by school year
      description: Retrieve graduate placement data for a specific school year
      parameters:
        - in: path
          name: tanev
          required: true
          description: The school year end
          schema:
            type: integer
            example: 2024
      responses:
        "200":
          description: Placement data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Elhelyezkedes"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /elhelyezkedes/{alapadatokId}/{tanev}:
    get:
      tags: [Elhelyezkedes]
      summary: Get placement data by school and year
      description: Retrieve graduate placement data for a specific school and school year
      parameters:
        - in: path
          name: alapadatokId
          required: true
          description: The school identifier
          schema:
            type: integer
            example: 1
        - in: path
          name: tanev
          required: true
          description: The school year end
          schema:
            type: integer
            example: 2024
      responses:
        "200":
          description: Placement data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Elhelyezkedes"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags: [Elhelyezkedes]
      summary: Delete placement data by school and year
      description: Delete all placement data for a specific school and school year
      parameters:
        - in: path
          name: alapadatokId
          required: true
          description: The school identifier
          schema:
            type: integer
            example: 1
        - in: path
          name: tanev
          required: true
          description: The school year end
          schema:
            type: integer
            example: 2024
      responses:
        "204":
          description: Placement data deleted successfully
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /elhelyezkedes:
    post:
      tags: [Elhelyezkedes]
      summary: Create new placement data
      description: Create new graduate placement data entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ElhelyezkedesInput"
      responses:
        "201":
          description: Placement data created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Elhelyezkedes"
        "400":
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /elhelyezkedes/{id}:
    put:
      tags: [Elhelyezkedes]
      summary: Update placement data
      description: Update existing graduate placement data entry
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Placement record ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ElhelyezkedesInput"
      responses:
        "200":
          description: Placement data updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Elhelyezkedes"
        "400":
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Record not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  # HH_es_HHH_nevelesu_tanulok endpoints
  /hh_es_hhh_nevelesu_tanulok/{tanev}:
    get:
      tags: [HH_es_HHH_nevelesu_tanulok]
      summary: Get disadvantaged students data by school year
      description: Retrieve disadvantaged students data for a specific school year
      parameters:
        - in: path
          name: tanev
          required: true
          description: The school year end
          schema:
            type: integer
            example: 2024
      responses:
        "200":
          description: Disadvantaged students data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HHesHHHNeveluTanulok"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /hh_es_hhh_nevelesu_tanulok/{alapadatokId}/{tanev}:
    get:
      tags: [HH_es_HHH_nevelesu_tanulok]
      summary: Get disadvantaged students data by school and year
      description: Retrieve disadvantaged students data for a specific school and school year
      parameters:
        - in: path
          name: alapadatokId
          required: true
          description: The school identifier
          schema:
            type: integer
            example: 1
        - in: path
          name: tanev
          required: true
          description: The school year end
          schema:
            type: integer
            example: 2024
      responses:
        "200":
          description: Disadvantaged students data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HHesHHHNeveluTanulok"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags: [HH_es_HHH_nevelesu_tanulok]
      summary: Delete disadvantaged students data by school and year
      description: Delete all disadvantaged students data for a specific school and school year
      parameters:
        - in: path
          name: alapadatokId
          required: true
          description: The school identifier
          schema:
            type: integer
            example: 1
        - in: path
          name: tanev
          required: true
          description: The school year end
          schema:
            type: integer
            example: 2024
      responses:
        "204":
          description: Disadvantaged students data deleted successfully
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /hh_es_hhh_nevelesu_tanulok:
    post:
      tags: [HH_es_HHH_nevelesu_tanulok]
      summary: Create new disadvantaged students data
      description: Create new disadvantaged students data entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/HHesHHHNeveluTanulokInput"
      responses:
        "201":
          description: Disadvantaged students data created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HHesHHHNeveluTanulok"
        "400":
          description: Bad request - Invalid input data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
